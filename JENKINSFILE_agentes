pipeline {
    agent none

    stages {
        stage('Get Code') {
            agent { label 'windows' }
            steps {
                bat 'whoami && hostname && echo %WORKSPACE%'
                git 'https://github.com/Carlitos-Etobar/helloworld.git'
                bat 'dir'
                stash name: 'source-code', includes: '**'
            }
        }

        stage('Build') {
            agent { label 'linux' }
            steps {
                sh 'whoami && hostname && echo $WORKSPACE'
                echo 'NO HAY QUE COMPILAR NADA. ESTO ES PYTHON'
                unstash 'source-code'
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'windows' }
                    steps {
                        bat 'whoami && hostname && echo %WORKSPACE%'
                        unstash 'source-code'
                        bat '''
                            set PYTHONPATH=%WORKSPACE%
                            pytest --junitxml=result-unit.xml test\\unit
                        '''
                        stash name: 'unit-results', includes: 'result-unit.xml'
                    }
                }

                stage('Rest') {
                    agent { label 'linux' }
                    steps {
                        sh 'whoami && hostname && echo $WORKSPACE'
                        unstash 'source-code'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                export FLASK_APP=app/api.py
                                export FLASK_ENV=development
                                nohup flask run > flask.log 2>&1 &
                                curl -L -O https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.28.0/wiremock-jre8-standalone-2.28.0.jar
                                nohup java -jar wiremock-jre8-standalone-2.28.0.jar --port 9090 -v --root-dir test/wiremock > wiremock.log 2>&1 &
                                sleep 5
                                export PYTHONPATH=$WORKSPACE
                                pytest --junitxml=result-rest.xml test/rest
                            '''
                        }
                        stash name: 'rest-results', includes: 'result-rest.xml'
                        sh 'pkill -f flask || true && pkill -f wiremock || true'
                        deleteDir()
                    }
                }
            }
        }

        stage('Results') {
            agent { label 'linux' }
            steps {
                sh 'whoami && hostname && echo $WORKSPACE'
                unstash 'unit-results'
                unstash 'rest-results'
                junit 'result*.xml'
            }
        }
    }
}
